{"version":3,"file":"905.bundle.js","mappings":"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","sources":["webpack://food/./src/stores/ProductsStore/SearchProductStore/SearchProductStore.ts","webpack://food/./src/stores/ProductsStore/ProductsStore.ts","webpack://food/./src/app/pages/Products/useProductsStore.tsx","webpack://food/./src/app/pages/Products/components/ProductCard/ProductCard.tsx","webpack://food/./src/app/pages/Products/components/SearchProduct/SearchProduct.tsx","webpack://food/./src/app/pages/Products/components/SearchProduct/SearchProduct.module.scss?390c","webpack://food/./src/app/pages/Products/Products.tsx","webpack://food/./src/app/pages/Products/Products.module.scss?bfb2"],"sourcesContent":["import { ILocalStore } from '@/utils/useLocalStore';\r\nimport { action, computed, makeObservable, observable } from 'mobx';\r\n\r\ntype PrivateFields = '_query';\r\n\r\nclass SearchProductStore implements ILocalStore {\r\n  private _query: string = '';\r\n\r\n  constructor() {\r\n    makeObservable<SearchProductStore, PrivateFields>(this, {\r\n      _query: observable.ref,\r\n      query: computed,\r\n      setQuery: action,\r\n      reset: action,\r\n      destroy: action,\r\n    });\r\n    const filter = sessionStorage.getItem('product-filter');\r\n    const savedQuery = JSON.parse(filter !== null ? filter : '');\r\n    if (savedQuery) {\r\n      this.setQuery(savedQuery.search);\r\n    }\r\n  }\r\n\r\n  get query() {\r\n    return this._query;\r\n  }\r\n\r\n  setQuery(query: string) {\r\n    this._query = query;\r\n  }\r\n\r\n  reset() {\r\n    this._query = '';\r\n  }\r\n\r\n  destroy(): void {}\r\n}\r\n\r\nexport default SearchProductStore;\r\n","import { action, computed, makeObservable, observable, runInAction } from 'mobx';\r\nimport { Meta } from '@/types/shared';\r\nimport qs from 'qs';\r\nimport { ILocalStore } from '@/utils/useLocalStore';\r\nimport rootStore from '../RootStore';\r\nimport { Product, ProductsResponse } from '@/types/product';\r\nimport SearchProductStore from './SearchProductStore/SearchProductStore';\r\n\r\ntype metaStateKeys = 'products';\r\n\r\ntype PrivateFields = '_products' | '_number' | '_totalResults' | '_number' | '_queryString' | '_metaState' | '_page';\r\n\r\ntype UpdateParams = {\r\n  page: number;\r\n  search?: string;\r\n};\r\n\r\nclass ProductsStore implements ILocalStore {\r\n  private _products: Product[] = [];\r\n  private _totalResults: number = 0;\r\n  private _number: number = 0;\r\n  private _queryString: string = '';\r\n  private _page: number;\r\n  private _metaState: Record<metaStateKeys, Meta> = {\r\n    products: Meta.initial,\r\n  };\r\n\r\n  readonly searchStore = new SearchProductStore();\r\n\r\n  constructor() {\r\n    this._page = Number(rootStore.query.getParam('page')) || 1;\r\n\r\n    makeObservable<ProductsStore, PrivateFields>(this, {\r\n      _products: observable,\r\n      _totalResults: observable,\r\n      _number: observable,\r\n      _queryString: observable,\r\n      _metaState: observable,\r\n      _page: observable,\r\n      products: computed,\r\n      totalResults: computed,\r\n      number: computed,\r\n      page: computed,\r\n      queryString: computed,\r\n      metaState: computed,\r\n      setIngredients: action,\r\n      setMetaState: action,\r\n      setPage: action.bound,\r\n      setProducts: action.bound,\r\n      resetPage: action.bound,\r\n      destroy: action,\r\n    });\r\n  }\r\n\r\n  get products() {\r\n    return this._products;\r\n  }\r\n\r\n  get totalResults() {\r\n    return this._totalResults;\r\n  }\r\n\r\n  get number() {\r\n    return this._number;\r\n  }\r\n\r\n  get metaState() {\r\n    return this._metaState;\r\n  }\r\n\r\n  get queryString() {\r\n    return this._queryString;\r\n  }\r\n\r\n  get page() {\r\n    return this._page;\r\n  }\r\n\r\n  getProducts = async () => {\r\n    try {\r\n      const query = this.searchStore.query;\r\n      if (query) {\r\n        this.setMetaState('products', Meta.loading);\r\n\r\n        const params = {\r\n          query: query,\r\n          offset: (this._page - 1) * 12,\r\n          number: 12,\r\n          addProductInformation: true,\r\n        };\r\n\r\n        const data = await rootStore.api.fetchProducts(params);\r\n\r\n        runInAction(() => {\r\n          if (data) {\r\n            this.setMetaState('products', Meta.success);\r\n            this.setIngredients(data);\r\n            return;\r\n          }\r\n\r\n          this.setMetaState('products', Meta.error);\r\n        });\r\n      } else {\r\n        this.setMetaState('products', Meta.initial);\r\n      }\r\n      const params: UpdateParams = {\r\n        page: this._page,\r\n        search: query || undefined,\r\n      };\r\n      this.updateUrl(params);\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.setMetaState('products', Meta.error);\r\n      });\r\n      console.error('Failed to load:', error);\r\n    }\r\n  };\r\n\r\n  setMetaState(key: keyof typeof this._metaState, state: Meta) {\r\n    this._metaState[key] = state;\r\n  }\r\n\r\n  setIngredients(data: ProductsResponse) {\r\n    this._products = data.products;\r\n    this._totalResults = data.totalProducts;\r\n    this._number = data.number;\r\n  }\r\n\r\n  setPage(page: number) {\r\n    this._page = page;\r\n  }\r\n\r\n  resetPage() {\r\n    this.setPage(1);\r\n  }\r\n\r\n  setProducts(products: Product[]) {\r\n    this._products = products;\r\n  }\r\n\r\n  updateUrl(params: UpdateParams) {\r\n    const queryString = qs.stringify(params, { addQueryPrefix: true });\r\n    window.history.replaceState(null, '', queryString || window.location.pathname);\r\n    this._queryString = queryString;\r\n  }\r\n\r\n  destroy(): void {}\r\n}\r\n\r\nexport default ProductsStore;\r\n","import React, { createContext, useContext } from 'react';\r\nimport { useLocalStore } from '@/utils/useLocalStore';\r\nimport ProductsStore from '@/stores/ProductsStore/ProductsStore';\r\n\r\ntype ProductsStoreProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const ProductsStoreContext = createContext<ProductsStore | undefined>(undefined);\r\n\r\nexport const ProductsStoreProvider: React.FC<ProductsStoreProps> = ({ children }) => {\r\n  const store = useLocalStore(() => new ProductsStore());\r\n  return <ProductsStoreContext.Provider value={store}>{children}</ProductsStoreContext.Provider>;\r\n};\r\n\r\nexport const useProductsStore = () => {\r\n  const store = useContext(ProductsStoreContext);\r\n  if (!store) {\r\n    throw Error('error');\r\n  }\r\n  return store;\r\n};\r\n","import Card from '@/components/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useMemo } from 'react';\r\nimport { Product } from '@/types/product';\r\n\r\ntype IngredientCardProps = {\r\n  product: Product;\r\n};\r\n\r\nconst ProductCard: React.FC<IngredientCardProps> = observer(({ product }) => {\r\n  const Image = useMemo(() => product.image || undefined, [product.image]);\r\n\r\n  return (\r\n    <Link to={`/products/${product.id}`}>\r\n      <Card captionSlot={product.aisle} title={product.title} subtitle={product.ingredientList} image={Image} />\r\n    </Link>\r\n  );\r\n});\r\n\r\nexport default ProductCard;\r\n","import Button from '@/components/Button';\r\nimport FindIcon from '@/components/icons/FindIcon';\r\nimport Input from '@/components/Input';\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\nimport s from './SearchProduct.module.scss';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useProductsStore } from '../../useProductsStore';\r\n\r\nconst SearchProduct: React.FC = observer(() => {\r\n  const { searchStore, setProducts, resetPage } = useProductsStore();\r\n  const [value, setValue] = useState<string>(searchStore.query);\r\n\r\n  const regex = useMemo(() => /^[A-Za-zА-Яа-я\\s,]+$/, []);\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event: React.KeyboardEvent) => {\r\n      if (event.key === 'Enter') {\r\n        searchStore.setQuery(value);\r\n        resetPage();\r\n      }\r\n    },\r\n    [resetPage, searchStore, value],\r\n  );\r\n\r\n  const handleQuerySubmit = useCallback(\r\n    (value: string) => {\r\n      searchStore.setQuery(value);\r\n      resetPage();\r\n    },\r\n    [resetPage, searchStore],\r\n  );\r\n\r\n  const handleQueryChange = useCallback(\r\n    (value: string) => {\r\n      if (regex.test(value) || value === '') {\r\n        setValue(value);\r\n      }\r\n    },\r\n    [regex],\r\n  );\r\n\r\n  const handleClear = () => {\r\n    setProducts([]);\r\n    setValue('');\r\n    resetPage();\r\n    searchStore.setQuery('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <Input\r\n        className={s.root__input}\r\n        onKeyDown={handleKeyDown}\r\n        value={value}\r\n        onChange={handleQueryChange}\r\n        placeholder=\"Enter ingredient\"\r\n      />\r\n      <Button onClick={() => handleQuerySubmit(value)}>\r\n        <FindIcon width={24} height={24} color=\"white\" />\r\n      </Button>\r\n      {value && <Button onClick={() => handleClear()}>Clear</Button>}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchProduct;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-app-pages-Products-components-SearchProduct-SearchProduct-module__root\",\"root__input\":\"src-app-pages-Products-components-SearchProduct-SearchProduct-module__root__input\"};","import { useEffect } from 'react';\r\nimport React from 'react';\r\nimport s from './Products.module.scss';\r\nimport Pagination from '@/components/Pagination';\r\nimport Text from '@/components/Text';\r\nimport { observer } from 'mobx-react-lite';\r\nimport RenderMetaContent from '@/hoc/RenderMetaContent';\r\nimport { ProductsStoreProvider, useProductsStore } from './useProductsStore';\r\nimport { withProvider } from '@/hoc/withProvider';\r\nimport ProductCard from './components/ProductCard';\r\nimport SearchProduct from './components/SearchProduct';\r\n\r\nconst Products: React.FC = observer(() => {\r\n  const { products, queryString, page, setPage, getProducts, metaState, totalResults, searchStore } =\r\n    useProductsStore();\r\n  const search = searchStore.query;\r\n  const resultsPerPage = 12;\r\n\r\n  const totalPages = Math.ceil(totalResults / resultsPerPage);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [page, search, queryString, getProducts]);\r\n\r\n  const product = products.map((product) => <ProductCard key={product.id} product={product} />);\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <div className={s.root__center}>\r\n        <Text view=\"p-xxl\">Products</Text>\r\n        <div>\r\n          <SearchProduct />\r\n        </div>\r\n        <RenderMetaContent meta={metaState.products} items={products}>\r\n          {product}\r\n        </RenderMetaContent>\r\n        {totalPages > 1 && products.length > 0 && (\r\n          <div className={s.root__pagination}>\r\n            <Pagination currentPage={page} totalPages={totalPages} onPageChange={setPage} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst ProductsWithProvider = withProvider(ProductsStoreProvider, Products);\r\n\r\nexport default ProductsWithProvider;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-app-pages-Products-Products-module__root\",\"root__center\":\"src-app-pages-Products-Products-module__root__center\",\"root__search\":\"src-app-pages-Products-Products-module__root__search\",\"root__pagination\":\"src-app-pages-Products-Products-module__root__pagination\"};"],"names":["SearchProductStore","_classCallCheck","_query","makeObservable","this","observable","ref","query","computed","setQuery","action","reset","destroy","filter","sessionStorage","getItem","savedQuery","JSON","parse","search","key","get","value","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","String","_toPrimitive","ProductsStore","_this","_products","_totalResults","_number","_queryString","_page","_metaState","products","Meta","initial","searchStore","getProducts","_callee","_params","data","params","_context","setMetaState","loading","offset","number","addProductInformation","rootStore","api","fetchProducts","runInAction","success","setIngredients","error","page","undefined","updateUrl","t0","console","Number","getParam","totalResults","queryString","metaState","setPage","bound","setProducts","resetPage","state","totalProducts","qs","addQueryPrefix","window","history","replaceState","location","pathname","ProductsStoreContext","createContext","useProductsStore","store","useContext","observer","_ref","product","Image","useMemo","image","_jsx","Link","to","concat","id","children","Card","captionSlot","aisle","title","subtitle","ingredientList","_useProductsStore","_useState2","useState","setValue","regex","handleKeyDown","useCallback","event","handleQuerySubmit","handleQueryChange","test","_jsxs","className","Input","onKeyDown","onChange","placeholder","Button","onClick","FindIcon","width","height","color","Products","totalPages","Math","ceil","useEffect","map","ProductCard","Text","view","SearchProduct","RenderMetaContent","meta","items","Pagination","currentPage","onPageChange","withProvider","useLocalStore","Provider"],"sourceRoot":""}